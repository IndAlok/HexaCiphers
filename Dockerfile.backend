# Backend Dockerfile (Optimized)
FROM python:3.9-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    tesseract-ocr \
    tesseract-ocr-hin \
    tesseract-ocr-ben \
    tesseract-ocr-tam \
    tesseract-ocr-tel \
    libpq-dev \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY backend/ ./backend/

# Ensure models cache folder exists and is writable
RUN mkdir -p /app/backend/models/cache

# Create non-root user and set ownership
RUN useradd -m -u 1000 appuser \
    && chown -R appuser:appuser /app
USER appuser

# Download NLTK data for the non-root user
RUN python -m nltk.downloader -d /app/nltk_data punkt stopwords

# Set environment variables
ENV PYTHONPATH=/app
ENV FLASK_APP=backend/app.py
ENV FLASK_ENV=production
ENV NLTK_DATA=/app/nltk_data
ENV TRANSFORMERS_CACHE=/app/backend/models/cache  

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Run the application
CMD ["python", "-m", "flask", "run", "--host=0.0.0.0", "--port=5000"]
