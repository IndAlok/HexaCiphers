version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-hexaciphers_db}
      POSTGRES_USER: ${POSTGRES_USER:-hexauser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hexapass123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-hexauser}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hexaciphers-network

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hexaciphers-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-hexauser}:${POSTGRES_PASSWORD:-hexapass123}@postgres:5432/${POSTGRES_DB:-hexaciphers_db}
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=${FLASK_ENV:-development}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
    volumes:
      - ./backend:/app/backend
      - ./models:/app/models
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - hexaciphers-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    networks:
      - hexaciphers-network

  # Celery Worker (for background tasks)
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: celery -A backend.app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-hexauser}:${POSTGRES_PASSWORD:-hexapass123}@postgres:5432/${POSTGRES_DB:-hexaciphers_db}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hexaciphers-network

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: celery -A backend.app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-hexauser}:${POSTGRES_PASSWORD:-hexapass123}@postgres:5432/${POSTGRES_DB:-hexaciphers_db}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - hexaciphers-network

volumes:
  postgres_data:
  redis_data:

networks:
  hexaciphers-network:
    driver: bridge